@page "/contact/edit"

@inject NavigationManager NavigationManager

<div class="container flex flex-col">
    <div class="text-accent text-2xl font-bold mb-6">
        <h1>Emergency Contact</h1>
    </div>
    <div>
        <InputGroupView Label="Name"
                        Value="@contactName"
                        Placeholder="Enter contact name"
                        ErrorMessage="@contactNameError"
                        OnChange="OnUsernameChanged" />

        <InputGroupView Label="Phone Number"
                        Type="tel"
                        Value="@phoneNumber"
                        Placeholder="Enter contact phone number"
                        ErrorMessage="@phoneNumberError"
                        OnChange="OnPhoneNumberChanged" />
    </div>
    <div class="flex justify-start gap-2">
        <SaveButtonView OnClick="@HandleSave" />
        @if (!string.IsNullOrEmpty(App.EmergencyContact?.ContactName))
        {
            <CancelButtonView OnClick="@HandleCancel" />
        }
    </div>
</div>

@code {
    private string contactName = App.EmergencyContact?.ContactName;
    private string phoneNumber = App.EmergencyContact?.PhoneNumber;
    private string contactNameError = "";
    private string phoneNumberError = "";

    private void OnUsernameChanged(ChangeEventArgs e)
    {
        contactName = e.Value?.ToString() ?? "";
        contactNameError = string.IsNullOrEmpty(contactName) ? "Username cannot be empty." : "";
    }

    private void OnPhoneNumberChanged(ChangeEventArgs e)
    {
        phoneNumber = e.Value?.ToString() ?? "";
        if (string.IsNullOrEmpty(phoneNumber))
        {
            phoneNumberError = "Phone number cannot be empty.";
        }
        else if (phoneNumber.Length < 9)
        {
            phoneNumberError = "Invalid phone number.";
        }
        else
        {
            phoneNumberError = "";
        }
    }

    private async Task HandleSave()
    {
        if (string.IsNullOrEmpty(contactNameError) && string.IsNullOrEmpty(phoneNumberError))
        {
            Preferences.Set("contact_name", contactName);
            Preferences.Set("contact_phone_number", phoneNumber);

            await LoadContactsData(contactName, phoneNumber);
            NavigationManager.NavigateTo("/contact");
        }
    }

    private async Task HandleCancel()
    {
        NavigationManager.NavigateTo("/contact");
    }

    private async Task LoadContactsData(string name, string phone)
    {
        App.LoadContactsData(name, phone);
    }
}